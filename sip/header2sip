typeheadercode=TYPEHEADERCODE
file=$(echo $1 | sed -r "s|.*cpp/||")
cat ../cpp/$file \
| sed "s|//.*||" \
| sed "s/#.*//" \
| sed "s/using.*//" \
| sed '/^\s*$/d' \
| vim -E +"%normal t(f{d%a;" +%p -cq! /dev/stdin \
| tr -d "\a" \
| sed -r "s/^([^)]+)[[:space:]]*=[^;]*;/\1;/" \
| sed -r "s/class([^{].*)\{/class\1{\n${typeheadercode}/" \
| sed -r "s/struct([^{].*)\{/struct\1{\n${typeheadercode}/" \
| sed -r "s/[[:space:]]string/ std::string/" \
| sed -r "s|^(.*UpdaterMessage)|//\1|" \
| sed -r "s|^(.*stream)|//\1|" \
| python remove_private.py \
| sed "s/override//g" 
echo
cat $(echo $file | sed "s/main//" | sed "s/h$/sip/" ) | grep -v "^//"

#documentation
# remove comments
# remove macros
# remove using...
# remove empty lines
# remove function definitions
# remove bell characters inserted by vim
# remove initial field values (e.g. int x = -1; )
# insert typeheadercode into classes
# insert typeheadercode into structs
# string -> std::string (fail on std:: string)
# UpdaterMessage: comment out
# iofstream: comment out
# remove functions that use c++ streams - that are not sip compatible yet
# remove private and protected parts (except override functions)
# remove override keywords

#TODO
#multiline initialization lists (NearestNeighborModel)


exit 0
