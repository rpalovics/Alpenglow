import alpenglow as prs
import alpenglow.Getter as rs
import alpenglow.experiments
import alpenglow.evaluation
import pandas as pd
import math
import numpy as np
import pytest
import sys
from alpenglow.evaluation import DcgScore
import alpenglow.cpp
compiler = alpenglow.cpp.__compiler
stdlib = alpenglow.cpp.__stdlib


class TestALSFactorExperiment:
    def test_ALSFactorExperiment(self):
        experiment = alpenglow.experiments.ALSOnlineFactorExperiment(
            period_length=500,
        )
        rankings = experiment.run("python/test_alpenglow/test_data_4", experimentType="online_id", verbose=True, exclude_known=True)
        assert rankings.top_k == 100
        desired_ranks = [101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 7.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 5.0, 101.0, 101.0, 3.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 1.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 1.0, 101.0, 101.0, 101.0, 16.0, 15.0, 20.0, 101.0, 101.0, 23.0, 101.0, 1.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 16.0, 101.0, 19.0, 44.0, 46.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 3.0, 101.0, 7.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 1.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 17.0, 101.0, 101.0, 101.0, 101.0, 101.0, 3.0, 101.0, 7.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 2.0, 101.0, 101.0, 101.0, 101.0, 81.0, 101.0, 101.0, 25.0, 101.0, 101.0, 101.0, 101.0, 101.0, 22.0, 60.0, 101.0, 101.0, 101.0, 1.0, 101.0, 1.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 3.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 13.0, 4.0, 101.0, 101.0, 101.0, 1.0, 101.0, 80.0, 4.0, 31.0, 5.0, 101.0, 32.0, 14.0, 9.0, 34.0, 20.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 7.0, 101.0, 101.0, 101.0, 16.0, 28.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 3.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 2.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 47.0, 101.0, 101.0, 101.0, 66.0, 101.0, 101.0, 101.0, 101.0, 26.0, 101.0, 97.0, 25.0, 70.0, 101.0, 24.0, 101.0, 101.0, 1.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 9.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 2.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 12.0, 101.0, 15.0, 30.0, 101.0, 101.0, 54.0, 62.0, 101.0, 101.0, 101.0, 20.0, 52.0, 10.0, 101.0, 53.0, 4.0, 101.0, 5.0, 101.0, 101.0, 101.0, 45.0, 2.0, 101.0, 3.0, 14.0, 101.0, 101.0, 101.0, 13.0, 101.0, 101.0, 101.0, 5.0, 6.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 19.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 38.0, 10.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 8.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 2.0, 10.0, 10.0, 13.0, 101.0, 101.0, 13.0, 101.0, 101.0, 63.0, 101.0, 101.0, 18.0, 101.0, 4.0, 101.0, 51.0, 9.0, 101.0, 101.0, 101.0, 51.0, 101.0, 101.0, 20.0, 101.0, 101.0, 101.0, 23.0, 101.0, 101.0, 65.0, 93.0, 101.0, 15.0, 101.0, 101.0, 101.0, 17.0, 13.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 6.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 3.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 31.0, 66.0, 28.0, 101.0, 101.0, 62.0, 45.0, 101.0, 36.0, 101.0, 101.0, 15.0, 22.0, 101.0, 19.0, 1.0, 8.0, 1.0, 2.0, 101.0, 13.0, 31.0, 9.0, 101.0, 101.0, 2.0, 101.0, 101.0, 63.0, 29.0, 17.0, 33.0, 12.0, 3.0, 4.0, 101.0, 64.0, 101.0, 41.0, 53.0, 23.0, 101.0, 1.0, 101.0, 101.0, 40.0, 101.0, 101.0, 17.0, 13.0, 5.0, 101.0, 7.0, 6.0, 9.0, 12.0, 25.0, 101.0, 38.0, 22.0, 101.0, 101.0, 101.0, 101.0, 101.0, 18.0, 29.0, 39.0, 27.0, 101.0, 101.0, 101.0, 53.0, 39.0, 11.0, 101.0, 66.0, 20.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 27.0, 101.0, 101.0, 23.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 17.0, 101.0, 101.0, 101.0, 40.0, 4.0, 45.0, 4.0, 3.0, 19.0, 101.0, 4.0, 22.0, 8.0, 101.0, 101.0, 13.0, 101.0, 101.0, 47.0, 101.0, 22.0, 15.0, 101.0, 25.0, 101.0, 101.0, 101.0, 41.0, 101.0, 101.0, 101.0, 41.0, 13.0, 9.0, 48.0, 12.0, 9.0, 101.0, 6.0, 101.0, 6.0, 101.0, 101.0, 101.0, 12.0, 3.0, 19.0, 101.0, 34.0, 7.0, 99.0, 22.0, 101.0, 11.0, 7.0, 10.0, 29.0, 101.0, 101.0, 101.0, 54.0, 101.0, 101.0, 10.0, 101.0, 8.0, 101.0, 8.0, 101.0, 101.0, 101.0, 20.0, 101.0, 101.0, 101.0, 1.0, 8.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 3.0, 101.0, 101.0, 6.0, 101.0, 101.0, 101.0, 101.0, 101.0, 16.0, 2.0, 101.0, 101.0, 101.0, 101.0, 101.0, 101.0, 4.0, 101.0, 15.0, 49.0, 20.0, 5.0, 101.0, 7.0, 101.0, 101.0, 28.0, 23.0, 4.0, 30.0, 64.0, 101.0, 80.0, 101.0]

        assert DcgScore(rankings).mean() == pytest.approx(0.0663298214520355, abs=1e-3)